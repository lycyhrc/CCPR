Course name,Course introduction
hadoop大数据技术,Apache_Hadoop大数据技术是软件工程、数据科学与大数据技术专业的专业必修课，是一门理论与实践紧密联系的课程。本课程以构建知识体系、阐明基本原理、开展初级实践、设计相关应用”为原则，为学生在大数据领域深耕细作”奠定基础、指明方向。课程将系统讲授大数据处理架构Hadoop、分布式文件系统HDFS、分布式并行编程模型MapReduce、分布式数据库HBase、数据仓库Hive、数据采集工具Flume和Sqoop、分布式协调工具Zookeeper等内容，让学生全面地学习和掌握大数据关键技术，学会用大数据思维认识、分析和解决问题。能够正确描述Hadoop分布式文件系统HDFS的体系结构、存储原理和读写过程，能够选择合适的Shell命令操作HDFS用于解决大数据存储问题，能够正确描述分布式编程框架MapReduce的工作原理，设计并实现可行的大数据批处理实验方案。能够正确描述HBase和Hive的数据模型和运行机制，能够选择合适的Shell命令访问HBase，用于满足面向列的大数据存储，能够设计合适的HQL访问Hive，用于快速实现简单的MapReduce统计任务。能够正确描述Flume和Sqoop的系统结构和工作原理，分析大数据采集与存储应用对社会、安全、法律的影响，评判并设计适合的解决方案，履行应该承担的责任。能够在Master选举和分布式锁等大数据应用场景中，正确使用分布式协调工具Zookeeper并分析其工作机制，解释Zookeeper在部署节能环保的分布式环境中的作用。
Java应用开发,"Java应用开发是软件工程专业的核心课程，是专业方向必修课，先修课程有高级语言程序设计、面向对象程序设计、数据结构和数据库系统原理等课程。通过本课程的学习，使学生在已经掌握了C和C++的基础之上，理解并掌握Java语言的基本语法，建立Java企业级开发的基本思想，进而学会使用Java企业级开发核心技术及规范，解决软件工程问题，并为后续专业课程奠定良好的程序设计基础。
本课程的主要内容包括Java基础（J2SE）、Java企业级开发（J2EE）、项目实践三部分。Java基础（J2SE）部分主要介绍Java语言基本语法中的接口、异常、工具类、输入输出、多线程、泛型、容器、反射等重点内容；Java企业级开发（J2EE）部分主要介绍XML、Tomcat、JDBC、Java Servlet、Http协议、MVC开发模式、JavaMail、cookie、session、JSP等Java企业级开发的常用核心技术及规范；项目实践部分包括用户管理系统和网上书店两个项目，其中，用户管理系统项目在课堂教学中逐步完成实现，网上书店项目主要由学生以分组的形式在期末完成。
能掌握Java语言基本语法中的接口、异常、容器、泛型、输入输出、多线程、反射等重点内容，建立Java应用开发的基本思想。
针对软件工程领域复杂工程问题，能正确评判其中的XML、Http协议、cookie、session、JDBC、JavaMail、Java Servlet、JSP等关键要素及其语法特性。
能熟练使用MVC开发模式，针对一定规模的软件工程问题，能客观分析项目研发和运行的相关制约因素，评价这些因素对项目实施的影响，提出基本思路和解决方案。
针对Java企业级开发的常用核心技术、规范及目前的主流框架，制定适合自己发展的规划和目标，不断学习，适应社会需求。"
操作系统原理,"操作系统原理课程是计算机类专业最重要的基础课程之一，在高级语言程序设计和数据结构等课程基础上，培养学生对操作系统的基本设计原理与应用等的认识，提升抽象思维能力，引导学生发现问题、分析问题并解决问题的能力。本课程注重基础知识与新技术的融合、理论到实践的转化，培养工程意识和能力。为学习后续课程及从事本专业的工程技术工作和科学研究打下基础。
本课程通过探究性教学，使学生掌握操作系统中的概念、理论和方法，在软件系统层面认识计算机系统工作的本质，提升学生理解问题能力，增强工程能力，培养具有创新和实际动手能力、掌握计算机操作系统工作原理和综合设计技术的人才。具体目标如下：
能够正确描述操作系统的基本原理与实现技术，能够运用操作系统理论对大型软件系统中的资源管理策略与线程、进程管理机制等复杂工程问题进行求解或近似求解。
能够结合操作系统从底层驱动到上层用户界面的完整体系结构，对复杂工程问题的解决方案合理性进行科学评价，包括与操作系统、系统软硬件的适配性。
能够关联主流操作系统平台及软件生态，分析操作系统软件开发及软件系统生态建立对社会、安全等因素的影响，评判并设计适合的解决方案。
能应用进程调度、虚拟技术、I/O管理等技术，对工程问题进行分析研究并设计解决方案，选择适当的操作系统，通过在其上进行二次开发，编码实现解决方案。1 第1绪论 1．操作系统的发展历程
2．操作系统的基本概念
3．操作系统的基本类型
4．UNIX操作系统介绍
操作系统的基本概念 操作系统的资源管理功能 4 讲述操作系统的发展和软硬件的层次结构，重点讲述操作系统的基本概念，使学生初步掌握操作系统的基本概念，激发学生学习兴趣。 了解操作系统的发展历史和新趋势，熟悉操作系统层次结构和基本概念。 培养学生职业道德、社会责任感、开阔视野、认知计算机专业的能力。 1
3
  每次课堂教学后有课外作业（1-4题），要求独立完成。 课前预习，课后查阅参考资料
2 第2章
操作系统的组织结构 1．操作系统虚拟机器
2．处理机状态
3．中断机制
4．UNIX系统结构 操作系统结构及中断机制 中断机制 2 讲述操作系统虚拟机器及中断机制的原理，激发学生学习兴趣。 熟悉操作系统虚拟机器的概念，掌握中断机制，建立计算机操作系统的整体概念。
培养学生将工程基础知识用于解决问题的能力，对工程问题分析研究并设计解决方案的能力。 1
2 每次课堂教学后有课外作业（1-4题），要求独立完成。 课前预习，课后查阅参考资料
3 第3章
用户界面 1．用户工作环境
2．操作系统用户界面
3．系统功能调用
4．UNIX的系统调用 系统初启与系统生成，运行程序的过程，系统调用 系统初启与系统生成，系统调用 2 讲述Linux系统的初始化过程，重点讲述系统调用的定义、形式、与访管指令的区别、实现过程，激发学生探索问题的兴趣。 了解操作系统初启与生成过程，建立操作系统工作的整体概念。
培养学生将工程基础知识用于解决问题的能力，对工程问题分析研究并设计解决方案的能力。 3
4 每次课堂教学后有课外作业（1-4题），要求独立完成。 课前预习，课后查阅参考资料
4 第4章
并发处理 1．进程引入
2．进程概念
3．进程控制
4．进程的相互制约关系
5．同步机构
6．进程互斥与同步的实现
7．进程通信
8．UNIX系统进程管理 进程概念1；进程互斥与同步的实现 进程互斥与同步的实现 12 讲述进程相关知识。重点讲述进程互斥与同步的实现，激发学生设计问题的兴趣。 熟悉进程互斥与同步的实现过程，建立计算机并发操作的整体概念。
培养学生将工程基础知识用于解决问题的能力，对工程问题分析研究并设计解决方案的能力。 1
4 每次课堂教学后有课外作业（1-4题），要求独立完成。 课前预习，课后查阅参考资料
5 第5章
资源分配与调度 1．资源管理概述
2．资源分配机制
3．资源分配策略
4．死锁
资源管理任务、资源分配方式，常用的分配策略、死锁的相关知识 分配策略、死锁 4 讲述资源管理资源分配方式，常用的分配策略、死锁的相关知识，重点资源分配策略、死锁的相关知识，激发学生对操作系统资源分配设计的兴趣。 熟悉计算机资源分配的技术，建立操作系统设计的整体概念。
培养学生将工程基础知识用于解决问题的能力，对工程问题分析研究并设计解决方案的能力。 1
2
3
4
每次课堂教学后有课外作业（1-4题），要求独立完成。 课前预习，课后查阅参考资料
6 第6章
处理机调度 1．处理机的多级调度
2．作业调度
3．进程调度
4．线程调度
5．UNIX系统的进程调度
常用的作业调度算法，进程调度算法，进程状态变迁图   进程状态变迁图 8 1. 讲述作业调度与进程调度的算法，重点讲述进程状态变迁图，激发学生学习兴趣。 熟悉作业调度与进程调度算法，建立处理机调度在计算机系统中地位与作用的概念。 培养学生将工程基础知识用于解决问题的能力，对工程问题分析研究并设计解决方案的能力。 1
4 每次课堂教学后有课外作业（1-2题），要求独立完成。 课前预习，课后查阅参考资料
7 第7章
主存管理 1．主存共享
2．主存管理的功能
3．分区存储管理
4．页式存储管理
5．段式系统
6．段页式存储系统
7．UNIX系统的存储管理技术
分区、页式、段式、段页式存储管理
页式地址变换，缺页处理 12 讲述分区、页式、段式、段页式存储管理，重点讲述页式地址变换，缺页处理，激发学生学习兴趣。 熟悉主存管理，建立计算机主存的整体概念。 培养学生将工程基础知识用于解决问题的能力，对工程问题分析研究并设计解决方案的能力。 1
4 每次课堂教学后有课外作业（1-4题），要求独立完成。 课前预习，课后查阅参考资料
8 第8章
I/O管理 1．I/O管理概念
2．缓冲技术
3．设备分配
4．I/O控制
5．UNIX系统的设备管理
缓冲技术，设备分配，I/O控制 I/O控制 5 讲述计算机的I/O管理，重点讲述缓冲技术与I/O控制，激发学生学习兴趣。 熟悉计算机的I/O管理，建立计算机主机与外设信息交换的整体概念。 培养学生将工程基础知识用于解决问题的能力，对工程问题分析研究并设计解决方案的能力。 2
4 每次课堂教学后有课外作业（1-4题），要求独立完成。 课前预习，课后查阅参考资料

9 第9章
文件系统 1．文件系统的概念
2．文件的逻辑组织与存取方法
3．文件的物理结构
4．文件存储空间的管理
5．文件目录
6．共享与安全
7．文件操作与文件备份
8．UNIX文件系统的主要结构与实现 文件结构，文件目录，UNIX系统文件索引结构 文件的索引结构 6 讲述文件结构，文件目录，UNIX系统文件索引结构，重点讲述UNIX系统文件索引结构，激发学生学习兴趣。 熟悉文件系统的组织与管理，建立计算机文件系统的整体概念。 培养学生将工程基础知识用于解决问题的能力，对工程问题分析研究并设计解决方案的能力。 3
4 每次课堂教学后有课外作业（1-4题），要求独立完成。 课前预习，课后查阅参考资料
10 第10章
分布式系统 1．分布系统的概念
2．分布系统的资源管理 分布系统的相关概念与资源管理 分布系统的资源管理 1 讲述分布系统的相关概念与资源管理，重点讲述分布系统的资源管理，激发学生学习兴趣。 了解分布系统的相关概念 培养学生将工程基础知识用于解决问题的能力，对工程问题分析研究并设计解决方案的能力。 2"
高级语言程序设计,"高级语言程序设计是计算机专业的核心课程，是学科基础必修课。它是学生接触的第一门程序设计类课程，也是后续许多专业课程的基础，更是使学生改变思维方式，建立计算思维的主要课程。因此，本课程既要为后续课程打下良好的基础，又要对学生以后的程序设计方法、技术、风格和习惯负责，培养学生的程序设计能力和良好的程序设计风格。
能运用结构化程序设计中的三种结构顺序结构、选择结构和循环结构对具体问题进行分析和设计，能利用软件工程方法，根据实际情况使用自顶向下、逐步求精、模块化、穷举、试探和递归等程序设计思想进行求解，具有一定的计算思维能力，能够对软件工程复杂问题进行求解或近似求解。
能分析现实生活中的问题需求，定义恰当的数据类型，合理组织数据，能推出解决问题的详细过程或者步骤，能利用自然语言、程序流程图和伪代码等方法描述算法，对软件工程领域复杂工程问题进行表述，并建立数学模型或进行实验测试。
针对复杂数据对象，用户自定义结构体和共用体数据类型表示，为合理利用系统资源采用动态的数据结构，应用计算机科学的基本原理针对所要解决的软件工程领域复杂工程问题展开研究，明确研究内容与目标。1 第1章
为什么要学C语言 1 C语言的发展历程
2为什么要学C语言
3编程的基础知识，软件的开发过程 C语言的特点 编程的基础知识，软件的开发过程 2 了解高级程序设计语言的发展历史和新趋势，熟悉C语言的特点及其地位，初步树立软件开发的整体概念 。 培养学生职业道德、社会责任感、开阔视野、认知计算机专业的能力。 
2

  教材8页1、3、7 课前预习，课后查阅参考资料
2 第2章
C数据类型 1变量与常量
2简单的屏幕输出
3基本数据类型
4计算变量或数据类型所占内存空间的大小
5变量的赋值和赋值运算符
6 集成开发环境简介 变量和常量，基本数据类型，计算变量或数据类型所占内存空间的大小，变量的赋值和赋值运算符 计算变量或数据类型所占内存空间的大小 2 熟悉 C语言的基本数据类型中的整型和实型，掌握标识符的命名规范和数据类型所占内存空间的大小，树立程序设计的整体概念。
培养学生改变思维方式，建立计算思维的能力，能够定义恰当的数据类型，合理组织数据。 2
教材24页1、2 课前预习，课后查阅参考资料
3 第3章
简单的算术运算和表达式 1算术运算符和表达式
2复合的赋值运算符
3 增1和减1运算符
4宏常量与宏替换
5 const 常量
6自动类型转换与强制类型转换运算符
7 常用的标准数学函数 算术运算符和表达式，增1和减1运算符，自动类型转换与强制类型转换运算符 增1和减1运算符，自动类型转换与强制类型转换运算符 2 熟悉C表达式的用法，掌握顺序结构程序设计方法，具有运用顺序程序设计方法解决实际问题的能力。
培养学生对工程问题进行正确描述和表达的能力。 2 教材43页2、3、4 课前预习，课后查阅参考资料
4 第4章
键盘输入和屏幕输出 1字符常量
2字符的输入和输出
3数据的格式化屏幕输出
4数据的格式化键盘输入
数据的格式化屏幕输出，数据的格式化键盘输入 数据的格式化屏幕输出，数据的格式化键盘输入 2 熟悉数据的格式化输入函数scanf（）与数据的格式化输出函数printf（），具有运用顺序程序设计方法解决实际问题的能力。 培养学生程序设计中友好人机交互的能力。 2 教材59页1、2、3 课前预习，课后查阅参考资料
5 第5章
选择控制结构 1生活中的问题求解方法
2计算机问题求解的基本特点
3算法的概念及其描述方法
4关系运算符与关系表达式
5逻辑运算符与逻辑表达式
6条件运算符和条件表达式
7 用于选择控制的条件语句
8用于多路选择控制的条件语句 算法的概念及其描述方法，关系运算符与关系表达式，逻辑运算符与逻辑表达式，用于选择控制的条件语句，用于多路选择控制的条件语句 用于选择控制的条件语句，用于多路选择控制的条件语句 4 掌握分支程序设计的基本方法，具有运用分支程序设计方法解决实际问题的能力。
培养学生程序设计中逻辑思维和表达的能力，能够对复杂问题进行求解或近似求解。 1
2 教材98页2、3、4、7、8、9、10 课前预习，课后查阅参考资料
6 第6章
循环控制结构 1循环控制结构与循环语句
2计数控制的循环
3条件控制的循环
4嵌套的循环
5流程的转移控制
6 结构化程序设计的核心思想
循环控制结构与循环语句，计数控制的循环，条件控制的循环，嵌套的循环，流程的转移控制，结构化程序设计的核心思想 流程的转移控制，结构化程序设计的核心思想 4 掌握三种循环语句：while语句，do-while语句和for语句。具有运用循环程序设计方法解决实际问题的能力
培养学生使用结构化编程思想分析和解决工程问题的能力，能够对复杂问题进行求解或近似求解。 1
2 教材142页9、10、12、15、17、18 课前预习，课后查阅参考资料
7 第7章
函数 1分而治之与信息隐藏
2函数的定义
3函数调用，函数原型
4向函数传递值
5 从函数返回值
6 函数封装与防御性程序设计
7 递归函数
8 变量的作业域和存储类型
9 模块化程序设计方法
10 代码风格
函数的定义，函数调用，函数原型，向函数传递值，从函数返回值，函数封装与防御性程序设计，递归函数，模块化程序设计方法 函数封装与防御性程序设计，递归函数，模块化程序设计方法 6 掌握函数的使用方法，包括定义函数、调用函数等。具有运用模块化程序设计思想解决复杂实际问题的能力。 培养学生利用模块化程序设计思想对复杂的工程问题进行求解或近似求解的能力。 1
教材185页4、5、6、7 课前预习，课后查阅参考资料
8 第8章
数组 1一维数组和二维数组的定义、初始化和引用
2向函数传递一维数组和二维数组
3常用的排序和查找算法
一维数组和二维数组的定义、初始化和引用，向函数传递一维数组和二维数组，常用的排序和查找算法 常用的排序和查找算法 4 理解数组的概念，掌握数组的使用方法，掌握数组在常用的排序和查找算法中的应用。具有运用数组组织数据进行程序设计的基本能力。 培养学生对批量数据组织和程序设计的能力，能够对复杂工程问题进行表述，进行实验测试。 1
2 教材224页7、10、12、16、17 课前预习，课后查阅参考资料
9 第9章
指针 1变量的内存地址
2指针变量的定义和初始化
3间接寻址运算符
4 按值调用与按地址调用
5指针变量作函数参数
6 函数指针及其应用
指针变量的定义和初始化，间接寻址运算符，按值调用与按地址调用，指针变量作函数参数，函数指针及其应用 指针变量作函数参数，函数指针及其应用 4 掌握使用指针设计程序的基本方法，具有运用指针变量访问数据进行程序设计的基本能力。 培养学生利用指针访问内存进行程序设计的能力，并能进行实验测试。 1
2 教材250页1、3、4 课前预习，课后查阅参考资料
10 第10章
字符串 1字符串常量
2字符指针
3字符串的存储、访问和输入/输出
4 字符串处理函数
5向函数传递字符串
字符指针，字符串的存储、访问和输入/输出，字符串处理函数，向函数传递字符串
向函数传递字符串
4 掌握字符串的使用方法，具有运用字符串组织数据进行程序设计的基本能力。 培养学生对字符批量数据组织和程序设计的能力，对复杂工程问题进行表述并进行实验测试。 1
2 教材283页4、7、9 课前预习，课后查阅参考资料
11 第11章
指针和数组 1指针和一维数组的关系
2指针和一维数组的关系
3指针数组及其应用
4 动态内存分配函数
5长度可变的一维和二维动态数组
6 常见的内存错误及其对策
指针和一维数组的关系，指针和一维数组的关系，指针数组及其应用 指针数组及其应用 6 理解指针和数组的关系，掌握使用数组和指针设计程序的基本方法，具有运用数组和指针进行程序设计的基本能力。 培养学生算法设计和分析能力和空间逻辑思维能力和形象思维能力，能够对复杂问题进行求解和实验测试。 2
3 教材327页3、6 课前预习，课后查阅参考资料
12 第12章
结构体和共用体 1 从基本数据类型到抽象数据类型
2结构体的定义
3结构体数组的定义和初始化
4 结构体指针的定义和初始化
5向函数传递结构体
6 共用体
7 枚举数据类型
8 动态数据结构单向链表
结构体的定义，结构体数组的定义和初始化，结构体指针的定义和初始化，共用体，动态数据结构单向链表 动态数据结构单向链表 6 掌握结构体变量、结构体数组、结构体指针的使用，掌握结构体在程序设计中的使用，具有应用结构体组织数据进行程序设计的基本能力。 针对复杂数据对象，用户自定义结构体和共用体数据类型表示，为合理利用系统资源采用动态的数据结构，明确研究内容与目标，对复杂工程问题进行表述并进行实验测试。 2
3 教材369页1、2、5 课前预习，课后查阅参考资料
13 第13章
文件操作 1 二进制文件和文本文件
2 文件的打开和关闭
3 按字符读写文件
4 按格式读写文件
5按数据块读写文件 二进制文件和文本文件，文件的打开和关闭 文件的打开和关闭 2 掌握文件的基本操作，具有使用文件组织数据进行程序设计的基本能力。 培养学生逻辑思维能力和形象思维能力。 2 教材397页1、2 课前预习，课后查阅参考资料"
计算机导论,"《计算机导论》是软件工程专业本科生入门性质的通识教育课程必修课，涵盖了软件工程领域相关的知识结构与技术体系。本课程通过对计算机基础知识、计算机硬件技术、软件技术、数据库技术、多媒体技术、网络技术、信息安全技术等的学习，使学生对今后要学习的主要知识板块以及专业方向具备初步的认识，熟悉专业相关的基本技术理论。为学习后续课程构建一个基本知识框架，并为学生从事本专业的工程技术工作和科学研究打下基础。
本课程教学目标主要如下：
掌握计算机发展历程、数制表示与运算规则，能够正确认识计算机对客观世界的影响与作用；区分不同算法表示与数据结构的特点，能够对复杂问题进行正确描述和表达。
理解计算机的基本结构及各组成部分之间的关联关系，分析与验证计算机的工作原理；综合考虑操作系统、网络体系结构、协议、安全等因素，协助软件设计与部署方案等在技术、经济等方面的综合评价。
能正确区分系统软件与应用软件的差异，熟悉软件工程理论，根据项目实际应用场景，能够选择合适的开发模型，并分析和评价可能引发的社会、法律和安全影响，以及需要承担的责任。
能够使用SQL语言实现关系数据库的各种基本运算，理解数据库系统、信息安全、多媒体等技术的新概念以及对软件生态环境的影响，并做出正确的评价。
能够正确掌握计算机科学体系分布、专业教育、产业结构与人才需求 (产品开发)，理解软件工程相关技术对人类社会、计算机文化与教育，以及计算机产业的推动作用，拥有良好的人文素养、思辨能力、处事能力和科学精神。"
计算机网络,"计算机网络是软件工程，计算机科学与技术、物联网、信息安全等专业的工程基础课，通过本课程学习，使学生掌握计算机网络的体系结构和流行的参考模型，掌握物理层的基本原理和数据通信技术，掌握数据链路层协议的工作原理和常见实例，掌握局域网基本原理和组网方法，掌握网络互连的基本知识和IP协议的运行机制，掌握传输层协议传输控制协议、用户数据报协议的运行原理，掌握应用层常见协议和网络服务的工作原理，以及应用系统构架方法，了解计算机网络技术发展的前沿技术，为培养学生在计算机网络系统的规划与构建，网络应用系统的建立与开发等工程技术工作和科学研究打下基础。
能系统掌握与计算机网络有关的基本概念、基本原理、网络构造的基本方法、主要协议的功能/原理/内容/性能以及应用特征，具备分析、比较、综合计算机网络需求和解决方案的能力。
能够掌握计算机网络的基本原理与方法，具备综合分析和实验试验能力，具备计算机网络系统的基本能力和软硬件协同的能力，能完成复杂的计算机网络需求分析，形成计算机网络设计方案。
针对计算机网需求分析、规划设计、部署验证过程，开展关键技术研究，对计算机网络面临问题的进行定义、建模、分析和解决。
能够熟练应用计算机网络软件和相关工具进行网络需求分析、设计和仿真，根据仿真结果判断、分析其结果的有效性和局限性，能按照实际需要搭建计算机网络,对网络进行检测、调试和改进，准确获取实验数据，并能够对实验数据进行分析和解释。
1 计算机网络概述 1.1  计算机网络在信息时代中的作用
1.2  因特网的概述
1.3  因特网的组成
1.4  计算机网络在我国的发展
1.5  计算机网络的类别
1.6  计算机网络的性能
1.7  计算机网络体系结构 计算机网络性能
计算机网络体系结构
计算机网络性能
6 1.要求掌握计算机网络的定义和内涵
2.了解计算机网络的分类及网络的形成和发展
3.掌握资源子网和通信子网的概念
4.了解电路交换、报文交换、分组交换
5.重点掌握计算机网络性能指标计算和体系结构 培养学生掌握计算机网络基本概念、基本原理。 1,2 课后作业，要求独立完成。 课前预习，课后查阅参考资料
2 物理层 2.1 物理层的基本概念
2.2 数据通信的基础知识
2.3 物理层下面的传输媒体
2.4 信道复用技术
2.5 数字传输系统
2.6 宽带接入技术 数据通信模型
香农公式
信道复用技术 香农公式
信道复用技术 8 1.掌握物理层的基本概念、数据通信的基础知识
2.掌握信道复用技术
3.了解数字传输系统和宽带接入技术。 培养掌握物理层的基本概念、数据通信的基础知识，香农公式
信道复用技术 1,2 课后作业，要求独立完成。 课前预习，课后查阅参考资料
3 数据链路层 3.1  使用点对点信道的数据链路层
3.2  点对点协议PPP
3.3  使用广播信道的数据链路层
3.4  使用广播信道的以太网
3.5  扩展的以太网
3.6  高速以太网
3.7  其他类型的高速局域网或接口 透明传输、CRC检错码、以太网CSMA/CD、透明网桥、VLAN 以太网CSMA/CD协议，透明网桥、VLAN 12 1.熟悉计算机网络数据链路层工作原理
2.掌握数据链路层封装、透明传输和差错检验机制
3.掌握点到点链路
4.掌握共享以太网链路的接入控制机制（CSMA/CD）和透明网桥工作原理
5.使用仿真工具模拟以太网组网
培养学生掌握数据链路层基本原理、CSMA/CD协议、透明网桥、VLAN等 1,2,3，4 课后作业，要求独立完成。 课前预习，课后查阅参考资料
4 网络层 4.1  网络层提供的两种服务
4.2  网际协议IP
4.3  划分子网和构造超网
4.4  网际控制报文协议ICMP
4.5　因特网的路由选择协议
4.6 IPv6
4.7  IP多播
4.8  虚拟专用网VPN和网络地址转换NAT
4.9 MPLS IP编址、IP寻址、IP路由 IP编址、IP寻址、IP路由 16 1. 掌握分类的IP编址方式和寻址方法
2. 掌握划分子网的IP编址方式和寻址方法
3.掌握无类的IP编址和寻址方法
4.掌握静态路由的构建方法
5.掌握动态路由协议的工作原理和实验分析验证方法
6.了解IPv6的编址和工作原理；
7.了解IP多播、VPN和NAT的工作原理
。 初步培养学生具有IP网络编址、寻址、路由分析、设计能力。 1，2,3,4 课后作业，要求独立完成。 课前预习，课后查阅参考资料
5 运输层 5.1  运输层协议概述
5.2  用户数据报协议UDP
5.3  传输控制协议TCP概述
5.4  可靠传输的工作原理
5.5  TCP报文段的首部格式
5.6  TCP可靠传输的实现
5.7  TCP的流量控制
5.8  TCP的拥塞控制
5.9  TCP的运输连接管理 可靠传输工作原理、TCP可靠传输实现、TCP流量控制、拥塞控制、TCP连接管理 可靠传输工作原理、TCP可靠传输实现、TCP流量控制、拥塞控制、TCP连接管理 8 1. 掌握运输层的基本概念和提供向上层提供的服务
2.了解UDP的工作原理
3.掌握TCP的可靠传输、流量控制、拥塞控制、连接管理 初步培养学生掌握可靠传输工作原理、TCP可靠传输实现、TCP流量控制、拥塞控制、TCP连接管理分析能力。 1,2,3,4 课后作业，要求独立完成。 课前预习，课后查阅参考资料
6 应用层 6.1  域名系统DNS
6.2  文件传送协议
6.3  远程终端协议TELNET
6.4  万维网WWW
6.5  电子邮件
6.6  动态主机配置协议DHCP
6.7  简单网络管理协议SNMP 
6.8  应用进程跨越网络的通信
6.9  P2P应用 域名系统DNS、万维网WWW、电子邮件 域名系统DNS、万维网WWW、电子邮件 6 1. 熟悉计算机网络应用层，熟悉网络应用的整体工作流程
2.理解域名系统DNS、文件传送、万维网、电子邮件、DHCP等互联网基础应用的工作原理 培养学生掌握计算机网络应用层，熟悉网络应用的整体工作流程，理解名系统DNS、文件传送、万维网、电子邮件、DHCP等互联网基础应用的工作原理。 1,2,3,4 课后作业，要求独立完成。 课前预习，课后查阅参考资料"
计算机组成原理,"计算机组成原理是计算机大类专业的专业必修课，是一门理论与实践紧密联系的课程，属于计算机硬件技术系列。本课程通过对计算机各组成部件的研究、分析和设计的学习，具体包括运算器、控制器、计算机存储器、指令系统、总线系统、I/O设备、信息交换方式等，使学生获得计算机组成原理方面的基本知识、基本理论和基本技能，为学习后续课程及从事本专业的工程技术工作和科学研究打下基础。
能应用软件工程专业的基本原理，识别软件工程领域复杂工程问题中涉及计算机的硬件组成部件、数据表示、运算方法等，并能正确求解各类数据转换、数据运算等问题。
能运用网络、实验室等资源，通过文献研究等方法，完成软件工程领域中复杂工程问题的分析，具体包括计算机存储器芯片的扩展技术、指令格式的分析与设计、计算机部件之间的总线互联、主机与外设的信息交换方式选择等问题。 
能够综合运用所学计算机原理，针对软件工程领域中中央处理器和模型机的设计问题展开研究，并构建基本的计算机硬件系统。"
离散数学,"离散数学是计算机类专业的专业基础课，本课程主要培养学生的抽象思维和逻辑推理能力，使学生正确的理解概念，正确地使用概念进行推理，养成良好的思维习惯、理解理论与实践的关系 (数学)，提高分析问题和解决问题的能力，提高数学修养及专业修养。
要想用计算机解决问题，就要为它建立数学模型，即描述研究对象及对象与对象之间的联系，并通过事物之间的联系找出事物的运动规律。本课程通过引导学生观察生活、社会和大自然，分析事物间的联系，建立系统的模型，并提出和解决其中的复杂工程问题。
能够使用图论中的基本概念：图，通路，回路；数理逻辑中的相关概念：命题，命题连接词，谓词，个体词，量词，命题公式、谓词公式；关系 (数学)中的各种概念：关系 (数学)、函数对复杂软件工程问题进行描述，使用命题公式、谓词公式的化简对部分逻辑问题、电路、程序流程提出相应改进途径；
能够使用集合中的并、交、差、补、对称差、幂集等运算；计数问题中的加法原理，乘法原理，排列，组合；关系 (数学)和函数的复合运算、逆运算，闭包运算，偏序关系 (数学)的八大元素；图论中的握手定理、通路数、回路数，可达性矩阵等知识进行问题的求解或近似求解。
能够使用关系 (数学)篇：关系 (数学)类型、函数类型的判定或证明；数理逻辑篇：等值关系 (数学)、重言式、矛盾式的判定；图论篇：有向图，无向图，带权图、连通图等等知识分析软件工程相关复杂工程问题的输入与输出之间的关系 (数学)并正确表述，最终建立数学模型；能够分析离散数学的各种证明方法（直接证明法、间接证明法、按定义证明方法、构造演绎法等）的适用范围并选择合适的方法对具体问题的表述和解决方案进行严谨的推理以证明其正确性。"
面向对象程序设计,"面向对象程序设计是软件工程专业的核心课程，是学科基础必修课，先修课程有计算机导论、高级语言程序设计等课程。通过本课程的学习，使学生在已经掌握了一门结构化程序设计语言的基础之上，理解面向对象程序设计的基本概念与方法，建立面向对象程序设计的基本思想，进而学会使用面向对象程序设计的方法，利用C++语言解决一般应用问题，培养学生面向对象程序设计的能力以及良好的程序设计习惯和风格，并为后续的专业课程奠定良好的面向对象程序设计基础。本课程的主要内容包括：基础知识、面向对象特征和常用工具3部分。基础知识部分主要介绍C++对C的扩充，如流、内联函数、函数重载、默认参数函数、模板函数、引用等概念；面向对象特征部分包括类与对象、运算符重载、继承、多态性等程序开发技术；常用工具部分包括输入输出流、异常处理、命名空间等内容。
能理解C与C++的区别和兼容性，能使用流、内联函数、函数重载、默认参数函数、模板函数、const修饰指针、引用等基本概念和语法规则，对软件工程领域复杂工程问题的解决方案进行评价、比较与综合。
能正确评判类与对象、运算符重载、继承、多态性等关键要素及其语法特性，能选择合适的语法机制，开发满足特定需求的软件系统。
在软件开发过程中，能熟练使用面向对象程序设计的思想和方法，提高软件的可用性、友好程度。"
软件工程,"软件工程是软件工程专业的专业必修课，是一门理论与实践紧密联系的课程。本课程以构建知识体系、阐明基本原理、开展初级实践、设计相关系统”为原则，为学生今后从事软件项目开发奠定基础、指明方向。课程将系统讲授软件工程学概述、问题定义、可行性分析、需求 (产品开发)分析、概要设计、详细设计、编码实现、测试和维护等内容，让学生了解软件工程的基本原理、概念和技术方法，掌握软件开发的一般方法、步骤和过程。
能够在分析复杂软件工程问题的背景基础上，正确使用软件工程专业知识描述问题的性质、类型和范围，明确待开发系统要实现的目标、功能和规模。
能够正确描述软件工程中的模型和运行机制，能够使用系统流程图、数据流图、软件架构图等相关工具设计需求 (产品开发)模型、设计模型、测试模型等系统模型。
能够正确描述问题定义、可行性分析、需求 (产品开发)分析、总体（概要）设计、详细设计、编码实现、测试和维护各阶段的任务、过程和方法，能够撰写对应阶段的相关技术文档。
能够正确描述软件工程的产生原因和发展历程，分析软件工程在各行业中的应用场景，评判软件工程技术对各行各业带来的影响。
能够正确描述软件工程的基本原理，理解不断改进软件工程实践的必要性，能够跟踪软件工程相关领域的最新技术标准，并分析技术新标准对软件工程的推动作用。
能够正确使用代码行技术、任务分解技术和自动估计成本技术等方法预估系统成本，并从经济学角度，分析系统的投资回收期、纯收入和投资回报率等经济指标，评判软件工程项目的成本、效益和风险。"
软件设计与体系结构,"软件设计与体系结构是软件工程专业的专业必修课，是一门理论与实践紧密联系的课程。本课程讲述软件设计与体系结构的基本概念、建模方法、风格分类、描述语言、评估方法等内容，为软件项目开发中系统的分析和设计提供原理和方法的指导。本课程引导学生对软件设计与体系结构的基础知识进行学习和认知，并结合实际案例加以运用，培养学生对软件工程领域的复杂工程问题进行分析和建模的能力。本课程包含主流的体系结构风格及设计模式 (计算机)等内容，可为学生即将从事的软件开发工作打下一定的基础。
能够正确描述软件体系结构、软件模型、三层架构、面向服务软件体系结构的基本概念，理解数据抽象和面向对象风格、模型-视图-控制器（MVC）风格、Restful/SOAP风格的相关内容。能够对B/S模式、C/S模式、混合结构等不同形式的系统解决方案进行评价、比较与综合。
能够掌握软件设计的基本概念，了解高可信软件设计的方法，以及软件设计评审方法。了解UML的发展历程，了解UML的特点、用途和建模机制，领会面向对象方法的优势，能够根据用户需求，熟练运用UML建模工具和方法进行软件系统设计。
能够理解软件复用性在社会、安全、环境等方面的价值和意义。能够理解单一职责原则、开闭原则、里氏代换原则、依赖倒转原则、接口隔离原则、合成复用原则、迪米特法则等面向对象设计原则与可复用性的关系，熟练掌握设计模式 (计算机)，能够利用这些知识对系统设计方案进行综合评价。
能够正确描述云计算的定义和技术特点，掌握基础设施层IaaS、平台层PaaS、应用程序层SaaS的基本概念，熟悉亚马逊AWS、微软Azure、阿里云、腾讯云等常用云平台，了解和跟踪国内外云计算产业的最新发展趋势。"
软件项目管理,"软件项目管理课程是计算机专业最重要的专业必修课程之一，属于计算机软件技术系列，在软件工程和计算机网络等课程基础上，课程通过探究性教学，依据软件项目管理的基本特点，以软件项目管理过程为线索，介绍软件项目管理的基本理论、方法和技术。主要内容包括：项目及项目管理的概念、软件项目的定义和特征、合同管理、需求管理、项目组织与规划、成本控制、进度管理、质量控制、资源管理和配置、项目跟踪控制、风险管理、项目结束等。通过课程教学，使学生较好地掌握项目管理的核心理论和方法，同时辅以团队仿案例活动，培养学生自觉和正确地应用项目管理理论和知识指导实践工作的开展，并解决项目管理中较为复杂的问题的综合能力。
能综合应用软件工程领域所需的专业知识，包括软件需求分析、软件工程模型、项目管理的意义等。针对项目管理的复杂性，能够在软件设计环节或实现方法中体现出创新意识，降低软件的复杂度，利用配置管理和架构为中心的分析和设计方法，提高软件的可用性、友好程度等。
基于进度管理的内容，使用现代化工具构建项目规模估算，设计实施项目成本监控和进度监控。对软件工程领域复杂工程问题进行测试与模拟。
能够基于软件工程相关背景知识进行合理分析与比较，实现质量管理和软件评审。使用需求管理的活动，对示例项目做出需求分析。使用风险分析技术，能评价软件工程实践和复杂工程问题解决方案以及执行配置审核。
掌握软件项目管理知识体系，具备具备软件工程师的专业素质和职业道德和规范，履行责任。设计人力资源分配方案，以及实施软件资源复用策略。
能够共同完成复杂软件生命周期各阶段的分析、设计与开发，能够运用恰当工具阐述评价工作成果，就软件工程领域复杂工程问题与业界同行、项目干系人及社会公众进行有效沟通和交流，包括设计撰写系统建设方案、需求规格说明书、项目管理文档等，能陈述发言、清晰表达。能在分工、设计、实现、口头和书面报告等环节中相互协调，相互配合。
能够分析软件工程实践活动中所需的经济与管理因素，能熟练运用软件项目管理工具， 解决软件的成本管理、进度管理、风险管理等工程管理活动和经济决策方法。"
软件质量保证与测试,"软件质量保证与测试课程是软件工程专业的专业必修课程之一，属于计算机软件技术系列，在软件工程和计算机网络等课程基础上，课程通过探究性教学，依据软件测试的基本特点，以质量保证为线索，主要从软件测试产生的背景、软件缺陷、软件质量与质量模型、软件测试定义和目的、软件测试过程模型和软件测试职业前景入手，介绍与软件测试相关的基础知识。分别从黑盒测试、白盒测试两个层面，单元测试、集成测试、系统测试和验收测试四个阶段深入分析如何制定合适的测试策略，选择和设计有效的测试用例等。讨论功能测试、性能测试、回归测试及其他相关测试技术，注重软件测试技术的实际运用，使学生可以更好地理解和掌握软件测试基本原理，并迅速地应用到实际测试工作中，提高工程实践能力。
设计软件测试基本流程，在软件测试实现方法中体现出创新意识，实施测试驱动开发，提高软件的可用性和友好程度。
能使用黑盒测试方法和白盒测试方法来解决软件测试中复杂工程问题。能够理解单元测试和集成定义、流程和方法，能够使用测试工具验证单元测试和集成测试。
能理解软件测试产生的背景和软件缺陷的定义，识别软件测试基本流程以及单元测试、集成测试和系统测试策略，能掌握验收测试方法，利用自动化工具进行客观评判，并承担相应责任。
能够理解软件质量模型，能够利用测试过程模型创建白盒测试、黑盒测试和B/S结构的系统测试，并能分析比较软件测试中所涉及的安全与隐私问题对社会健康发展的影响。
能够理解软件测试原则和测试用例的创建，设计集成测试、系统测试和验收测试流程及方法，并对系统性能进行优化。能够解决软件测试实践活动所需的经济与管理因素，掌握实施软件测试在项目管理中的应用。"
数据结构,"数据结构是软件工程专业的学科基础必修课，在整个专业教学中占有十分重要的地位，是一门理论性非常强的课程。通过该课程的学习，使学生了解数据对象的特性，数据组织的基本方法，并初步具备分析和解决现实世界问题在计算机中如何表示和处理的能力以及培养良好的程序设计技能，为后续课程的学习和科研工作的参与打下良好的基础。
本课程内容主要包括三大部分：数据结构基本概念、三种典型数据结构、查找和排序算法。基本概念主要介绍数据结构的定义，逻辑结构和存储结构，算法描述与算法复杂度分析，程序设计的基本原理；三种数据结构包括线性结构、树和图，详细介绍三种数据结构的逻辑结构、存储结构、操作和应用；查找和排序讨论两种算法的重要内容，包含算法定义、典型算法的描述、时间复杂度分析和相关想法比较等。
能运用离散数学中的逻辑关系、集合、二元关系等基本原理，分析线性表、树、图等三种数据结构中数据对象的特性与数据组织的基本方法，能正确设计线性表、树和图等数据结构的逻辑结构、存储结构，以及各种常规操作接口。
能够剖析具体问题的数据特征，正确设计合适的数据结构并构建完整的解决方案，能以程序设计视角分析迷宫、N皇后、最小生成树等问题，构建完整、正确的解决方案。
能正确推导各种常用排序和查找等算法的工作原理和程序设计，能够综合运用所学的数据结构基础知识，分析复杂问题的关键环节和因素，选择适合的排序或查找算法并构建解决方案。
能利用数学中的函数、数列等基本原理，正确推断程序解决方案的时间和空间复杂度，能结合所学程序设计和数据结构基础，比较不同程序算法时间复杂度，分析影响算法复杂度的因素。"
数据库系统原理,"数据库技术是计算机科学的重要分支，数据库技术和数据库系统已经成为计算机信息系统的核心技术和重要基础。《数据库系统原理》是本科软件工程专业核心课程之一，具有较强的理论性和实用性，肩负着培养学生数据库理论和实践知识的重任。 该课程的核心内容是研究数据管理（包括数据的存储、管理、处理和分析利用等）技术的一门基本原理与实际应用相结合的理论性和实用性较强的课程，重点是关系数据库系统的基本原理、技术和应用方法，以及数据库系统的设计、数据库编程及系统维护等相关理论与实用技术。通过本课程的学习与实践，让学生能够在软件开发过程中结合软件需求设计合理高效的数据库，能够利用数据库编程实现软件功能的实现。这样，不仅能够让学生更深刻的理解基于数据库的信息系统的设计、开发、运行及维护过程中用到的理论知识，更能够让学生把多门课程的知识融会贯通。本课程注重理论知识与实现技术的结合、实现从理论到实践的转化，培养学生分析问题并实际动手解决问题的能力。
通过本课程的教学，能使学生深刻理解和掌握关系数据库系统的基本概念、基本原理、基本方法和应用技术，深刻理解数据库系统的工作原理，深刻理解和掌握数据库设计和数据库应用系统开发的一般过程和基本方法。培养具有较强数据库理论和实践知识的、具有分析问题和解决问题的能力、实际动手操作能力的高级人才。具体课程目标如下： 
学生能够结合实际应用场景，利用关系模型SQL语言完成数据库的创建、数据定义、数据操作（增、删、改、查等）等具体应用；能够应用数据库的概念模型、逻辑模型、物理模型、数据库完整性和规范化理论等理论，完成对复杂应用软件的数据库设计（建模），并能够分析数据库设计的优劣；能够利用SQL语言结合实际应用进行数据库后台编程（编写存储过程、函数、触发器等），为构建的软件功能提供实现支撑。
学生能够理解数据库的完整性、安全性及信息污染的相关概念和实现机制，对开发的数据库及其软件能够评估和判断其安全性、完整性及信息污染防范情况。
学生能够比较全面的了解数据库理论与技术相关的历史和文化背景、目前的发展现状和未来的发展趋势，能够正确认识数据库是对客观世界的抽象、刻画和反映；能够熟悉数据库领域相关的技术标准（如SQL92标准、或SQL99标准、或SQL2003标准，TCSEC标准、CC标准等），为在社会实践中使用或研究数据库提供基础保证。
学生能够根据数据库不同的应用领域，建立适合自己的发展规划和目标以及对应的自我学习方法。"
算法设计与分析,"算法设计与分析是软件工程、计算机科学与技术、信息安全、大数据分析与技术等相关专业的专业必修课，是系统软件及大型应用软件开发的重要基础。本课程通过对几类常用算法设计策略如分治与递归、贪心、动态规划、回溯法以及分支限界法等的引入，构建学生能够使用合适算法设计策略去解决实际问题的能力。为开发高效软件系统以及复杂工程问题的求解，提供算法设计的创造性思维方法以及理论基础。
通过算法时间复杂度和空间复杂度的分析，基于计算复杂性理论面对同一个复杂工程问题，能够将问题模型化并选择高效率低存储的近似算法设计实现问题的求解过程。
通过剖析几类常用算法的基本原理、设计思想、建模过程和应用场景，面对特定软件需求能够选择使用一些常用算法，解决一些较综合的问题。
在掌握必要的算法设计技术与理论的基础上，构建学生分析问题解决问题的能力，引导学生通过终身学习的方式在实际工作中根据具体问题设计和优化算法。
递归与分治策略 2.1 递归的概念 
2.2 分治法的基本思想
2.3 二分搜索技术
2.4 大整数的乘法
2.5 Strassen 矩阵乘法
2.6 棋盘覆盖 1、递归的概念
2、分治法的基本思想
3、运用分治递归的设计思想解决实际问题 使用递归与分治的设计思想解决实际问题 8 1. 掌握分治与递归设计思想，能够通过分析实际问题具备的特征，选择合适的设计策略；
2. 能够使用时空复杂性分析方法，推论所设计算法的时间复杂度。
构建问题模型化的能力，培养学生针对特定软件需求使用算法思想分析和解决实际问题的能力。 1、2 查阅实际生产生活应用中，递归与分治思想的应用场景。
动态规划 3.1 矩阵连乘问题
3.2 动态规划算法的基本要素
3.3 最长公共子序列
3.9 流水作业调度
3.10 0-1背包问题
3.11 最优二叉搜索树 1、动态规划算法设计思想。
2、动态规划设计思想与分治递归算法的区别与联系
3、运用动态规划设计思想解决实际问题 使用动态规划设计思想解决实际问题 8 1.掌握动态规划设计思想，能够通过分析实际问题具备的特征，选择合适的算法设计策略；
2. 能够使用时空复杂性分析方法，推论所设计算法的时间复杂度；
培养学生分析可用动态规划算法求解的问题所应具备的一般特征的能力，从而对特定需求的实际问题选择或设计出合适的算法。 1、2 课后作业（例题凸多边形最优三角剖分、最大子段和的PPT讲解），要求分组完成。 课前预习，课后查阅动态规划算法在实际生产生活中的应用场景
4 第4章
贪心算法 4.1 活动安排问题
4.2 贪心算法的基本要素
4.3 最优装载
4.4 哈夫曼编码
4.5 单源最短路径
4.6最小生成树
1、贪心算法设计思想。
2、贪心算法设计思想与动态规划算法的区别与联系
3、运用贪心算法设计思想解决实际问题的能力 使用贪心算法设计思想解决实际问题 6 1.掌握贪心算法设计思想，能够通过分析实际问题具备的特征，选择合适的算法设计策略；
2.能够使用时空复杂性分析方法，推论所设计算法的时间复杂度。 培养学生通过分析问题本身的一些特性，在全局最优以及局部最优之间作出较合理的设计。
使得学生明确在一些情况下，即使贪心算法不能得到整体最优解，但其最终结果却是最优解很好的近似。"
,
,
,
,
,
,
,
,
,
,
,
,
